name: build_deps

on:
  push:
    branches: ['*']
    tags:
      - '20[2-9][0-9]-[0-9][0-9]-[0-9][0-9]'
  pull_request:
    paths-ignore:
      - '**.md'
    branches:
      - master

jobs:
  ffmpeg-build:
    name: 'Build FFmpeg'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        target: [windows-x64]
        include:
          - target: windows-x64
            os: 'windows-latest'
            config: 'Release'
            type: 'static'
            revision: 8
    env:
      CACHE_REVISION: ${{ matrix.revision }}
      WSLENV: 'GITHUB_OUTPUT/p:GITHUB_WORKSPACE/p'
    defaults:
      run:
        shell: wsl-bash {0}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: Vampire/setup-wsl@v2
        with:
          distribution: Ubuntu-22.04
          additional-packages:
            zsh

      - name: Setup Environment
        id: setup
        run: |
          target='${{ matrix.target }}'
          artifact_name="ffmpeg-${target}-${{ github.sha }}"
          file_name="${target%%-*}-ffmpeg-$(date +"%Y-%m-%d")-${target##*-}.tar.xz"

          echo "artifactName=${artifact_name}" >> $GITHUB_OUTPUT
          echo "artifactFileName=${file_name}" >> $GITHUB_OUTPUT
          echo "ccacheDate=$(date +"%Y-%m-%d")" >> $GITHUB_OUTPUT

      - name: Restore Compilation Cache
        id: ccache-cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.ccache
          key: ${{ matrix.target }}-ccache-ffmpeg-${{ steps.setup.outputs.ccacheDate }}
          restore-keys: |
            ${{ matrix.target }}-ccache-ffmpeg-

      - name: Check for GitHub Labels
        id: seekingTesters
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          if [[ -n "$(curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -s "${{ github.event.pull_request.url }}" | jq -e '.labels[] | select(.name == "Seeking Testers")')" ]]; then
            echo "found=true" >> $GITHUB_OUTPUT
          else
            echo "found=false" >> $GITHUB_OUTPUT
          fi

      - name: Build FFmpeg
        uses: ./.github/actions/build-ffmpeg
        with:
          target: ${{ matrix.target }}
          type: ${{ matrix.type }}
          config: ${{ matrix.config }}
          cacheRevision: ${{ env.CACHE_REVISION }}

      - name: Publish Build Artifacts
        if: ${{ success() && (github.event_name != 'pull_request' || steps.seekingTesters.outputs.found == 'true') }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.setup.outputs.artifactName }}
          path: ${{ github.workspace }}/${{ matrix.target }}/${{ steps.setup.outputs.artifactFileName }}
